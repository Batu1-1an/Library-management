@model IEnumerable<LibraryManagementSystem.Models.Borrowing>

@{
    ViewData["Title"] = "My Borrowed Books";
}

<div class="container">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="page-title mb-0">My Borrowed Books</h1>
        <a asp-action="Search" class="btn btn-primary">
            <i class="fas fa-search me-2"></i>Browse Books
        </a>
    </div>

    @if (Model.Any())
    {
        <div class="row">
            <div class="col-md-4 mb-4">
                <div class="stats-card">
                    <h3>@Model.Count()</h3>
                    <p>Total Borrowings</p>
                </div>
            </div>
            <div class="col-md-4 mb-4">
                <div class="stats-card">
                    <h3>@Model.Count(b => !b.ReturnDate.HasValue)</h3>
                    <p>Currently Borrowed</p>
                </div>
            </div>
            <div class="col-md-4 mb-4">
                <div class="stats-card">
                    <h3>@Model.Count(b => b.ReturnDate.HasValue)</h3>
                    <p>Returned Books</p>
                </div>
            </div>
        </div>

        <div class="card">
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table mb-0">
                        <thead>
                            <tr>
                                <th>
                                    <i class="fas fa-book me-2"></i>Book
                                </th>
                                <th>
                                    <i class="fas fa-calendar me-2"></i>Borrow Date
                                </th>
                                <th>
                                    <i class="fas fa-calendar-check me-2"></i>Due Date
                                </th>
                                <th>
                                    <i class="fas fa-calendar-times me-2"></i>Return Date
                                </th>
                                <th>
                                    <i class="fas fa-info-circle me-2"></i>Status
                                </th>
                                <th>
                                    <i class="fas fa-cog me-2"></i>Actions
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var borrowing in Model)
                            {
                                <tr>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <div class="book-icon me-3">
                                                <i class="fas fa-book"></i>
                                            </div>
                                            <div>
                                                <div class="fw-bold">@borrowing.Book.Title</div>
                                                <small class="text-muted">by @borrowing.Book.Author</small>
                                            </div>
                                        </div>
                                    </td>
                                    <td>@borrowing.BorrowDate.ToShortDateString()</td>
                                    <td>@borrowing.DueDate.ToShortDateString()</td>
                                    <td>
                                        @if (borrowing.ReturnDate.HasValue)
                                        {
                                            @borrowing.ReturnDate.Value.ToShortDateString()
                                        }
                                        else
                                        {
                                            <span class="text-muted">Not returned yet</span>
                                        }
                                    </td>
                                    <td>
                                        @if (borrowing.ReturnDate.HasValue)
                                        {
                                            <span class="badge badge-success">
                                                <i class="fas fa-check-circle me-1"></i>Returned
                                            </span>
                                        }
                                        else if (borrowing.DueDate < DateTime.Now)
                                        {
                                            <span class="badge badge-danger">
                                                <i class="fas fa-exclamation-circle me-1"></i>Overdue
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="badge badge-info">
                                                <i class="fas fa-clock me-1"></i>Borrowed
                                            </span>
                                        }
                                    </td>
                                    <td>
                                        <div class="d-flex gap-2">
                                            <a asp-action="Details" asp-route-id="@borrowing.BookId" class="btn btn-icon" title="Book Details">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            @if (!borrowing.ReturnDate.HasValue)
                                            {
                                                <form asp-action="Return" asp-route-id="@borrowing.BookId" method="post" style="display: inline;">
                                                    @Html.AntiForgeryToken()
                                                    <button type="submit" class="btn btn-icon" title="Return Book">
                                                        <i class="fas fa-undo-alt"></i>
                                                    </button>
                                                </form>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="alert alert-info">
            <i class="fas fa-info-circle me-2"></i>You haven't borrowed any books yet.
            <a asp-action="Search" class="alert-link ms-2">Browse available books</a>
        </div>
    }
</div>

<style>
.book-icon {
    width: 40px;
    height: 40px;
    background: var(--primary-color);
    border-radius: 8px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
}

.stats-card {
    background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
    padding: 1.5rem;
    border-radius: var(--border-radius);
    color: white;
}

.stats-card h3 {
    font-size: 2rem;
    margin-bottom: 0.5rem;
    color: white;
}

.stats-card p {
    margin: 0;
    opacity: 0.9;
}

.btn-icon {
    width: 35px;
    height: 35px;
    padding: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 8px;
    background: var(--background-color);
    color: var(--text-color);
    transition: var(--transition);
}

.btn-icon:hover {
    background: var(--primary-color);
    color: white;
    transform: translateY(-2px);
}
</style> 