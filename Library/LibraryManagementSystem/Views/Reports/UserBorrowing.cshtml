@model IEnumerable<LibraryManagementSystem.Models.BorrowHistoryViewModel>

@{
    ViewData["Title"] = "User Borrowing History";
}

<div class="container">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Borrowing History</h2>
        <a asp-action="UsersList" class="btn btn-secondary">Back to Users List</a>
    </div>

    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Book Title</th>
                            <th>Borrow Date</th>
                            <th>Due Date</th>
                            <th>Return Date</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.BookTitle</td>
                                <td>@item.BorrowDate.ToShortDateString()</td>
                                <td>@item.DueDate.ToShortDateString()</td>
                                <td>
                                    @if (item.ReturnDate.HasValue)
                                    {
                                        @item.ReturnDate.Value.ToShortDateString()
                                    }
                                    else
                                    {
                                        <span class="text-muted">Not returned</span>
                                    }
                                </td>
                                <td>
                                    @if (item.ReturnDate.HasValue)
                                    {
                                        if (item.ReturnDate > item.DueDate)
                                        {
                                            <span class="badge bg-warning">Returned Late</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-success">Returned</span>
                                        }
                                    }
                                    else if (item.IsOverdue)
                                    {
                                        <span class="badge bg-danger">Overdue</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-primary">Borrowed</span>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div> 