@model List<LibraryManagementSystem.Models.BorrowingDetailsViewModel>

@{
    ViewData["Title"] = "User Borrowings";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="mb-0">
        <i class="fas fa-book-reader me-2"></i>Borrowings for @ViewBag.UserName
    </h1>
    <div>
        <a asp-action="ExportBorrowings" asp-route-userId="@ViewBag.UserId" class="btn btn-success me-2">
            <i class="fas fa-file-excel me-2"></i>Export to Excel
        </a>
        <a asp-action="UsersList" class="btn btn-secondary">
            <i class="fas fa-arrow-left me-2"></i>Back to Users List
        </a>
    </div>
</div>

<div class="card shadow-sm">
    <div class="table-responsive">
        <table class="table table-hover mb-0">
            <thead>
                <tr>
                    <th scope="col">
                        <i class="fas fa-book me-2"></i>Book
                    </th>
                    <th scope="col">
                        <i class="fas fa-calendar me-2"></i>Borrow Date
                    </th>
                    <th scope="col">
                        <i class="fas fa-calendar-alt me-2"></i>Due Date
                    </th>
                    <th scope="col">
                        <i class="fas fa-calendar-check me-2"></i>Return Date
                    </th>
                    <th scope="col">
                        <i class="fas fa-info-circle me-2"></i>Status
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var borrowing in Model)
                {
                    <tr>
                        <td>
                            <div>
                                <div class="fw-bold">@borrowing.BookTitle</div>
                                <small class="text-muted">by @borrowing.BookAuthor</small>
                            </div>
                        </td>
                        <td>@borrowing.BorrowDate.ToString("dd.MM.yyyy")</td>
                        <td>@borrowing.DueDate.ToString("dd.MM.yyyy")</td>
                        <td>
                            @if (borrowing.ReturnDate.HasValue)
                            {
                                @borrowing.ReturnDate.Value.ToString("dd.MM.yyyy")
                            }
                            else
                            {
                                <span class="text-muted">-</span>
                            }
                        </td>
                        <td>
                            @switch (borrowing.Status)
                            {
                                case "Active":
                                    <span class="badge bg-primary">
                                        <i class="fas fa-clock me-1"></i>Active
                                    </span>
                                    break;
                                case "Overdue":
                                    <span class="badge bg-danger">
                                        <i class="fas fa-exclamation-circle me-1"></i>Overdue
                                    </span>
                                    break;
                                case "Returned":
                                    <span class="badge bg-success">
                                        <i class="fas fa-check me-1"></i>Returned
                                    </span>
                                    break;
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@if (!Model.Any())
{
    <div class="alert alert-info mt-4">
        <i class="fas fa-info-circle me-2"></i>No borrowing records found for this user.
    </div>
} 